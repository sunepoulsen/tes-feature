plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.google.cloud.tools.jib'
}

dependencies {
    // Tech Easy Solutions
    implementation 'dk.sunepoulsen.tes-foundation:tes-spring-boot-backend-logging:2.0.0-SNAPSHOT'
    implementation 'dk.sunepoulsen.tes-foundation:tes-spring-boot-rest-logic:2.0.0-SNAPSHOT'

    // Spring Boot
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // Persistence
    implementation 'jakarta.persistence:jakarta.persistence-api'

    // Liquibase
    implementation 'com.h2database:h2:2.3.232'
    implementation 'org.liquibase:liquibase-core:4.29.2'

    // Database Drivers
    implementation 'org.postgresql:postgresql:42.7.4'

    // Spring Boot Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-spring:2.4-M1-groovy-4.0'
}

jib {
    from {
        image = "${project.property('backend.module.base.image.name')}:${project.property('backend.module.base.image.tag')}"
    }
    to {
        image = project.name.toString()
        tags = [project.property('version').toString()]
    }

    container {
        jvmFlags = [
            '-Dcom.sun.management.jmxremote',
            '-Dcom.sun.management.jmxremote.port=9010',
            '-Dcom.sun.management.jmxremote.local.only=false',
            '-Dcom.sun.management.jmxremote.authenticate=false',
            '-Dcom.sun.management.jmxremote.ssl=false'
        ]
        ports = ['8080', '9010']
    }
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
}

tasks.build.dependsOn tasks.jibDockerBuild
